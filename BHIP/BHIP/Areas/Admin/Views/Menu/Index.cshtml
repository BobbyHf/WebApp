@model BHIP.Model.MenuViewModel
@using System.Text
@{
    ViewBag.Title = "Menu Administration";
    
    int currentLevel = -1;
    int menuID = -1;

    var menuData = Model.menuView as System.Collections.Generic.IEnumerable<BHIP.Model.MenuView>;
    if (menuData != null)
    {
        if (menuData.Count() > 0)
        {
            menuID = (int)menuData.DefaultIfEmpty().First().MenuID;
        }
    }
    else
    {
        menuID = 0;
    }
    //menuID = 0;
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script src="//code.jquery.com/ui/1.11.2/jquery-ui.js"></script>*@
    @Scripts.Render("~/scripts/jquery.mjs.nestedSortable.js")
    @Scripts.Render("~/Scripts/jquery.contextmenu.min.js")
}

<script>

		(function(){
		    if (!/*@@cc_on!@@*/0) return;
			var e = ("abbr article aside audio canvas command datalist details figure figcaption footer "+
				"header hgroup mark meter nav output progress section summary time video").split(' '),
			i=e.length;
			while (i--) {
			document.createElement(e[i])
			}
		})(document.documentElement,'className');

	</script>

	<style type="text/css">

		html {
			background-color: #eee;
		}

		body {
			-webkit-border-radius: 10px;
			   -moz-border-radius: 10px;
			        border-radius: 10px;
			color: #444;
			background-color: #fff;
			font-size: 13px;
			font-family: Freesans, sans-serif;
			padding: 2em 4em;
			/*width: 860px;*/
			margin: 15px auto;
			box-shadow:				1px 1px 8px #444;
			-mox-box-shadow:		1px 1px 8px #444;
			-webkit-box-shadow:		1px -1px 8px #444;
		}

		a, a:visited {
			color: #4183C4;
			text-decoration: none;
		}

		a:hover {
			text-decoration: underline;
		}

		pre, code {
			font-size: 12px;
		}

		pre {
			width: 100%;
			overflow: auto;
		}

		small {
			font-size: 90%;
		}

		small code {
			font-size: 11px;
		}

		.placeholder {
			outline: 1px dashed #4183C4;
			/*-webkit-border-radius: 3px;
			-moz-border-radius: 3px;
			border-radius: 3px;
			margin: -1px;*/
		}

		.mjs-nestedSortable-error {
			background: #fbe3e4;
			border-color: transparent;
		}

		ol {
			margin: 0;
			padding: 0;
			/*padding-left: 30px; */
		}

		ol.sortable, ol.sortable ol {
			margin: 0 0 0 25px;
			padding: 0;
			list-style-type: none;
		}

		ol.sortable {
			margin: 4em 0;
		}

		.sortable li {
			margin: 5px 0 0 0;
			padding: 0;
		}

		.sortable li div  {
			border: 1px solid #d4d4d4;
			-webkit-border-radius: 3px;
			-moz-border-radius: 3px;
			border-radius: 3px;
			border-color: #D4D4D4 #D4D4D4 #BCBCBC;
			padding: 6px;
			margin: 0;
			cursor: move;
			background: #f6f6f6;
			background: -moz-linear-gradient(top,  #ffffff 0%, #f6f6f6 47%, #ededed 100%);
			background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#ffffff), color-stop(47%,#f6f6f6), color-stop(100%,#ededed));
			background: -webkit-linear-gradient(top,  #ffffff 0%,#f6f6f6 47%,#ededed 100%);
			background: -o-linear-gradient(top,  #ffffff 0%,#f6f6f6 47%,#ededed 100%);
			background: -ms-linear-gradient(top,  #ffffff 0%,#f6f6f6 47%,#ededed 100%);
			background: linear-gradient(to bottom,  #ffffff 0%,#f6f6f6 47%,#ededed 100%);
			filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#ededed',GradientType=0 );
		}

		.sortable li.mjs-nestedSortable-branch div {
			background: -moz-linear-gradient(top,  #ffffff 0%, #f6f6f6 47%, #f0ece9 100%);
			background: -webkit-linear-gradient(top,  #ffffff 0%,#f6f6f6 47%,#f0ece9 100%);

		}

		.sortable li.mjs-nestedSortable-leaf div {
			background: -moz-linear-gradient(top,  #ffffff 0%, #f6f6f6 47%, #bcccbc 100%);
			background: -webkit-linear-gradient(top,  #ffffff 0%,#f6f6f6 47%,#bcccbc 100%);

		}

		li.mjs-nestedSortable-collapsed.mjs-nestedSortable-hovering div {
			border-color: #999;
			background: #fafafa;
		}

		.disclose {
			cursor: pointer;
			width: 10px;
			display: none;
		}

		.sortable li.mjs-nestedSortable-collapsed > ol {
			display: none;
		}

		.sortable li.mjs-nestedSortable-branch > div > .disclose {
			display: inline-block;
		}

		.sortable li.mjs-nestedSortable-collapsed > div > .disclose > span:before {
			content: '+ ';
		}

		.sortable li.mjs-nestedSortable-expanded > div > .disclose > span:before {
			content: '- ';
		}

/*=======================================================*/
		ol.notsortable, ol.notsortable ol {
			/*margin: 0 0 0 5px;*/
			padding: 0;
			list-style-type: none;
            margin-bottom: -25px;
		}

		ol.notsortable {
			/*margin: 4em 0;*/
		}

		.notsortable li {
			margin: 5px 0 0 0;
			padding: 0;
		}

		.notsortable li div  {
			border: 1px solid #d4d4d4;
			-webkit-border-radius: 3px;
			-moz-border-radius: 3px;
			border-radius: 3px;
			border-color: #D4D4D4 #D4D4D4 #BCBCBC;
			padding: 6px;
			margin: 0;
			cursor: move;
			background: #f6f6f6;
			background: -moz-linear-gradient(top,  #ffffff 0%, #f6f6f6 47%, #ededed 100%);
			background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#ffffff), color-stop(47%,#f6f6f6), color-stop(100%,#ededed));
			background: -webkit-linear-gradient(top,  #ffffff 0%,#f6f6f6 47%,#ededed 100%);
			background: -o-linear-gradient(top,  #ffffff 0%,#f6f6f6 47%,#ededed 100%);
			background: -ms-linear-gradient(top,  #ffffff 0%,#f6f6f6 47%,#ededed 100%);
			background: linear-gradient(to bottom,  #ffffff 0%,#f6f6f6 47%,#ededed 100%);
			filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#ededed',GradientType=0 );
		}
/*====================================================================*/

		h1 {
			font-size: 2em;
			margin-bottom: 0;
		}

		h2 {
			font-size: 1.2em;
			font-weight: normal;
			font-style: italic;
			margin-top: .2em;
			margin-bottom: 1.5em;
		}

		h3 {
			font-size: 1em;
			margin: 1em 0 .3em;;
		}

		p, ol, ul, pre, form {
			margin-top: 0;
			margin-bottom: 1em;
		}

		dl {
			margin: 0;
		}

		dd {
			margin: 0;
			padding: 0 0 0 1.5em;
		}

		code {
			background: #e5e5e5;
		}

		input {
			vertical-align: text-bottom;
		}

		.notice {
			color: #c33;
		}

	</style>

<script>

    $(document).ready(function () {

        $('ol.sortable').nestedSortable({
            forcePlaceholderSize: true,
            handle: 'div',
            helper: 'clone',
            items: 'li',
            opacity: .6,
            placeholder: 'placeholder',
            revert: 250,
            tabSize: 25,
            tolerance: 'pointer',
            toleranceElement: '> div',
            maxLevels: 3,
            rootID: @menuID,
            isTree: true,
            expandOnHover: 700,
            startCollapsed: false
        });

        $('.disclose').on('click', function () {
            $(this).closest('li').toggleClass('mjs-nestedSortable-collapsed').toggleClass('mjs-nestedSortable-expanded');
        })

        $('#serialize').click(function () {
            serialized = $('ol.sortable').nestedSortable('serialize');
            $('#serializeOutput').text(serialized + '\n\n');
        })

        $('#toHierarchy').click(function (e) {
            hiered = $('ol.sortable').nestedSortable('toHierarchy', { startDepthCount: 0 });
            hiered = dump(hiered);
            (typeof ($('#toHierarchyOutput')[0].textContent) != 'undefined') ?
			$('#toHierarchyOutput')[0].textContent = hiered : $('#toHierarchyOutput')[0].innerText = hiered;
        })

        $('#toArray').click(function (e) {
            arraied = $('ol.sortable').nestedSortable('toArray', {startDepthCount: 0});
            //arraied = dump(arraied);
            //(typeof($('#toArrayOutput')[0].textContent) != 'undefined') ?
			//$('#toArrayOutput')[0].textContent = arraied : $('#toArrayOutput')[0].innerText = arraied;
            var ma = $('ol.sortable').nestedSortable('toArray');
            //alert(ma)
            //alert(arraied);
            //alert(ma);


            $("#menuOrder").val(JSON.stringify(arraied));
//            $("#menuOrder").val(arraied);
            //alert(JSON.stringify(ma));
            //alert($("#menuOrder").val());
            //return false;
        })


        $('div.menu').contextMenu('contextMenu', {
            bindings: {
                'create': function (t) {
                    var url = '@Url.Action("Create", "Menu", new { id = "__id__" })';
                    window.location.href = url.replace('__id__', t.id);
                },
                'edit': function (t) {
                    var url = '@Url.Action("Edit", "Menu", new { id = "__id__" })';
                    window.location.href = url.replace('__id__', t.id);
                },
                'delete': function (t) {
                    var url = '@Url.Action("Delete", "Menu", new { id = "__id__" })';
                    window.location.href = url.replace('__id__', t.id);
                }
            }
        });

        $('div.child').contextMenu('contextChildMenu', {
            bindings: {
                'edit': function (t) {
                    var url = '@Url.Action("Edit", "Menu", new { id = "__id__" })';
                    window.location.href = url.replace('__id__', t.id);
                },
                'delete': function (t) {
                    var url = '@Url.Action("Delete", "Menu", new { id = "__id__" })';
                    window.location.href = url.replace('__id__', t.id);
                }
            }
        });
        $('div.parent').contextMenu('contextParentMenu', {
            bindings: {
                'create': function (t) {
                    var url = '@Url.Action("Create", "Menu", new { id = "__id__" })';
                    window.location.href = url.replace('__id__', t.id);
                }
            }
        });
    });

    function dump(arr,level) {
        var dumped_text = "";
        if(!level) level = 0;

        //The padding given at the beginning of the line.
        var level_padding = "";
        for(var j=0;j<level+1;j++) level_padding += "    ";

        if(typeof(arr) == 'object') { //Array/Hashes/Objects
            for(var item in arr) {
                var value = arr[item];

                if(typeof(value) == 'object') { //If it is an array,
                    dumped_text += level_padding + "'" + item + "' ...\n";
                    dumped_text += dump(value,level+1);
                } else {
                    dumped_text += level_padding + "'" + item + "' => \"" + value + "\"\n";
                }
            }
        } else { //Strings/Chars/Numbers etc.
            dumped_text = "===>"+arr+"<===("+typeof(arr)+")";
        }
        return dumped_text;
    }

</script>
<div>
<div style="width: 750px; margin-left: auto; margin-right: auto;">
<h2>Menu Administration</h2>

@using (Html.BeginForm("SaveMenu", "Menu"))
{
    @Html.Raw("<input id=\"menuOrder\" name=\"menuOrder\" type=\"hidden\" value=\"\" />")
    @Html.Raw("<ol class=\"notsortable\"><li id=\"list_" + menuID + "\"><div class=\"parent\" id=\"" + menuID + "\"><span class=\"disclose\"><span></span></span>Top Level</div></li>");
    @Html.Raw("</ol>")


    @Html.Raw("<ol class=\"sortable\">")
    if (Model.menuView != null)
    {
        foreach (var item in Model.menuView)
        {
            @*if (item.Level == 0)
            {
                @Html.Raw("<li level=1 id=\"list_" + item.MenuID + "\"><div class=\"menu\" id=\"" + item.MenuID + "\"><span class=\"disclose\"><span></span></span>" + item.Title + "</div></li>");
            }*@
            if (item.Level == 1 && currentLevel == -1)
            {
                @Html.Raw("<li level=1 id=\"list_" + item.MenuID + "\"><div class=\"menu\" id=\"" + item.MenuID + "\"><span class=\"disclose\"><span></span></span>" + item.Title + "</div>");

                currentLevel = item.Level;
            }
            else if (item.Level == 1)
            {
                if (currentLevel == 2)
                {
                    @Html.Raw("</li></ol></li>")
                }
                else if (currentLevel == 3)
                {
                    @*@Html.Raw("</ol></li>")*@
    @Html.Raw("</ol></ol></li>")
                }
                else if (currentLevel == 1)
                {
                    @Html.Raw("</li>")
                }
                @Html.Raw("<li level=1 id=\"list_" + item.MenuID + "\"><div class=\"menu\" id=\"" + item.MenuID + "\"><span class=\"disclose\"><span></span></span>" + item.Title + "</div>");
                currentLevel = item.Level;
            }
            else if (item.Level == 2)
            {
                if (currentLevel < 2)
                {
                    @Html.Raw("<ol>")
                }
                if (currentLevel == 3)
                {
                    @Html.Raw("</ol></li>")
                }
                else if (currentLevel == 2)
                {
                    @Html.Raw("</li>")
                }                
                @Html.Raw("<li level=2 id=\"list_" + item.MenuID + "\"><div class=\"menu\" id=\"" + item.MenuID + "\"><span class=\"disclose\"><span></span></span>" + item.Title + "</div>");
                currentLevel = item.Level;
            }
            else if (item.Level == 3)
            {
                if (currentLevel < 3)
                {
                    @Html.Raw("<ol>")
                }
                @Html.Raw("<li level=3 id=\"list_" + item.MenuID + "\"><div class=\"child\" id=\"" + item.MenuID + "\"><span class=\"disclose\"><span></span></span>" + item.Title + "</div></li>");
                currentLevel = item.Level;
            }
        }
        if (currentLevel == 2)
        {
                @Html.Raw("</ol></li>")
        }
        else if (currentLevel == 3)
        {
            @Html.Raw("</ol></ol>")
        }
    }
    @Html.Raw("</ol>")
    @Html.Raw("<div class=\"form-group\">")
    @Html.Raw("<input id=\"toArray\" type=\"submit\" value=\"Save Order\" class=\"btn btn-default\" />")
    @Html.Raw("</div>")
}

        <div class="contextMenu" id="contextMenu">
            <ul>
                <li id="create"><img src="/Content/images/create.gif" /> Create Menu</li>
                <li id="edit"><img src="/Content/images/edit.gif" /> Edit Menu</li>
                <li id="delete"><img src="/Content/images/cross.png" /> Delete Menu</li>
            </ul>
        </div>
        <div class="contextMenu" id="contextChildMenu">
            <ul>
                <li id="edit"><img src="/Content/images/edit.gif" /> Edit Menu</li>
                <li id="delete"><img src="/Content/images/cross.png" /> Delete Menu</li>
            </ul>
        </div>
        <div class="contextMenu" id="contextParentMenu">
            <ul>
                <li id="create"><img src="/Content/images/create.gif" /> Create Menu</li>
            </ul>
        </div>

    <div id="toArrayOutput"></div>
</div>
</div>